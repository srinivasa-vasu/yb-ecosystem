version: '3.9'
x-kong-config: &kong-env
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: 127.0.0.1
  KONG_PG_PORT: 5433
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
services:
  # yugabytedb:
  #   container_name: yugabytedb
  #   image: yugabytedb/yugabyte:${YBDB_VERSION}
  #   command: bin/yugabyted start --advertise_address=0.0.0.0 --daemon=false
  #   ports:
  #     - 5433:5433
  #   environment:
  #     - YSQL_PASSWORD=kong
  #     - YSQL_USER=kong
  #     - YSQL_DB=kong
  #   healthcheck:
  #     test: curl -t '' --fail telnet://$(hostname -i):5433; if [[ $$? == 49 ]]; then echo 0; else echo 1; fi
  #     interval: 10s
  #     timeout: 5s
  #     start_period: 15s
  #     retries: 5
  # postgresql:
  #   container_name: postgres
  #   image: docker.io/bitnami/postgresql:${PG_VERSION}
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - postgresql_data:/bitnami/postgresql
  #   environment:
  #     - POSTGRESQL_USERNAME=kong
  #     - POSTGRESQL_PASSWORD=kong
  #     - POSTGRESQL_DATABASE=kong
  kong-ysql-migrate-bootstrap:
    container_name: kong-ysql-migrate-bootstrap
    image: kong/kong-gateway:${KONG_VERSION}
    # depends_on:
    #   yugabytedb:
    #     condition: service_healthy
    command: kong migrations ${DEBUG} bootstrap
    network_mode: host
    environment:
      <<: *kong-env
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  kong-ysql-migrate-up:
    container_name: kong-ysql-migrate-up
    image: kong/kong-gateway:${KONG_VERSION}
    command: kong migrations ${DEBUG} up && kong migrations ${DEBUG} finish
    network_mode: host
    environment:
      <<: *kong-env
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  kong-ysql:
    container_name: kong-ysql
    image: kong/kong-gateway:${KONG_VERSION}
    network_mode: host
    depends_on:
      - kong-ysql-migrate-up
    # ports:
    #   - 8000:8000
    #   - 8001:8001
    #   - 8002:8002
    #   - 8443:8443
    environment:
      <<: *kong-env
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_URL: "http://localhost:8002"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  # kong-psql-migrate-bootstrap:
  #   container_name: kong-psql-migrate-bootstrap
  #   image: kong/kong-gateway:${KONG_VERSION}
  #   command: kong migrations ${DEBUG} bootstrap
  #   environment:
  #     - KONG_PG_HOST=postgresql
  #     - KONG_PG_PASSWORD=kong
  #     - KONG_PG_PORT=5432
  # kong-psql-migrate-up:
  #   container_name: kong-psql-migrate-up
  #   image: kong/kong-gateway:${KONG_VERSION}
  #   command: kong migrations ${DEBUG} up && kong migrations ${DEBUG} finish
  #   depends_on:
  #     - kong-psql-migrate-bootstrap
  #   environment:
  #     - KONG_PG_HOST=postgresql
  #     - KONG_PG_PASSWORD=kong
  #     - KONG_PG_PORT=5432
  # kong-psql:
  #   container_name: kong-psql
  #   image: kong/kong-gateway:${KONG_VERSION}
  #   depends_on:
  #     - kong-psql-migrate-up
  #   ports:
  #     - 15000:15000
  #     - 15001:15001
  #     - 15002:15002
  #     - 15005:15005
  #   environment:
  #     - KONG_PG_HOST=postgresql
  #     - KONG_PG_PASSWORD=kong
  #     - KONG_PG_PORT=5432
  #     - KONG_PROXY_HTTP_PORT_NUMBER=15000
  #     - KONG_PROXY_HTTPS_PORT_NUMBER=15005
  #     - KONG_ADMIN_LISTEN=0.0.0.0:15001
  #     - KONG_ADMIN_GUI_URL=http://localhost:15002

volumes:
  postgresql_data:
    driver: local
